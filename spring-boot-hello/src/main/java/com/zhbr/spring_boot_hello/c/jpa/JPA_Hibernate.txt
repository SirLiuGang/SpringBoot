/**
 * JPA全称Java Persistent API，JPA通过JDK 5.0注解或者XML描述对象——关系表的映射关系，并将运行期的实体对象持久化到数据库中
 * JPA(Java Persistent API)是sun官方提出的java<b>持久化规范</b>。他为Java开发人员提供了一种对象/关系映射工具来管理Java应用中的数据关系
 * 
 * 持久化：将数据(如内存中的对象)保存到可永久保存的存储设备中(如磁盘)。
 * 		作用：将内存中的对象存储在数据库中，或者存储在磁盘文件中、XML数据文件中等等。
 * 		持久化是将程序数据在持久状态和瞬时状态间准换的机制。
 * 		JDBC就是一种持久化机制。文件IO也是一种持久化机制。
 * 
 * 
 * 
 * Hibernate：开放源代码的对象关系映射框架，他对JDBC进行了非常轻量级的对象封装，将POJO与数据库表建立映射关系，是一个全自动的orm框架。完成数据持久化。
 * 
 * ORM：对象关系映射，Object Relational Mapping简称ORM，是一种程序技术，用于实现面向对象编程语言里不同系统类型的系统之间的数据转换。
 * 
 * Spring Data：简化数据库访问，并支持云服务的开源框架
 * 		目的：使数据库的访问变得方便快捷，并支持map-reduce框架和云计算数据服务。此外，他还支持基于关系型数据库的数据服务，如Oracle RAC等。
 * 			对于拥有海量数据的项目，可以使用Spring Data来简化项目的开发，如Spring Framework对JDBC、ORM的支持一样，Spring Data会让数据的访问变得更加方便
 * 		Spring Data API能干什么：可以极大的简化JPA的写法，可以在几乎不写实现的情况下，实现对数据的访问和操作。除了CRUD外，还包括如分页、排序等一些常用的功能。
 * 						简化JPA写法，让你只需要编写一个接口继承一个类就能实现CRUD的操作了。
 * 
 * 
 * JPA/Hibernate 关系：
 * 		JPA是一种规范，而Hibernate是他的一种实现。除了Hibernate，还有EclipseLink，OpenJPA等可供选择，所以使用JPA的一个好处是，可以更换实现而不必改动太多代码
 */

 
 ----------------------------------
 1.需要添加相应的依赖包
 2.需要在application.properties文件添加配置信息
 3.需要创建一个实体类，如Cat
 4.需要创建一个接口继承CrudRepository
 5.需要创建一个Service
 6.需要创建一个Controller
 7.代码测试 
 
 
 
 
 
 
 
 
 
 
 